plugins {
	id "fabric-loom" version "1.9-SNAPSHOT"
	id "maven-publish"
	id "com.gradleup.shadow" version "8.3.5"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	splitEnvironmentSourceSets()

	mods {
		"modid" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	compileOnly libs.lombok
	annotationProcessor libs.lombok

	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	shadow project(":common-config")
	// Required for relocation, from common-config
	shadow libs.jackson.core
	shadow libs.jackson.annotations
	shadow libs.jackson.databind
	shadow libs.jackson.dataformat.yaml

	shadow libs.jda
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	toolchain.setLanguageVersion(JavaLanguageVersion.of(21))

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

shadowJar {
	configurations = [project.configurations.shadow]

	relocate "com.fasterxml.jackson", "dev.seeruk.com.fasterxml.jackson"
	relocate "com.sun.jna", "dev.seeruk.com.sun.jna"
}

remapJar {
	dependsOn(shadowJar)
	mustRunAfter(shadowJar)

	inputFile = shadowJar.archivePath
	archiveClassifier = ""
}

runServer {
	dependsOn(shadowJar)
	classpath(shadowJar.archivePath)
}
